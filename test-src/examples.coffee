###
This purpose of this file is to test the generated m26.js file, outside of jasmine,
before deployment to npm.  It (accurately) generates Examples section of the README.md
file based on actual working code and output.
Copyright 2014, Christopher Joakim, JoakimSoftware LLC <christopher.joakim@gmail.com>
###

m26 = require("./lib/m26.js")

console.log('')
console.log('### Examples')
console.log('')
console.log('#### Setup')
console.log('Add m26-js to your project or package.json file:')
console.log('```')
console.log('npm install m26-js')
console.log('```')
console.log('')
console.log('Require m26-js in your code:')
console.log('```')
console.log('m26 = require(m26-js")')
console.log('```')
console.log('')

console.log('#### Constants')
console.log('m26-js defines the following:')
console.log('```')
console.log('m26.Constants.UOM_MILES:           ' + m26.Constants.UOM_MILES)
console.log('m26.Constants.UOM_KILOMETERS:      ' + m26.Constants.UOM_KILOMETERS)
console.log('m26.Constants.UOM_YARDS:           ' + m26.Constants.UOM_YARDS)
console.log('m26.Constants.UNITS_OF_MEASURE:    ' + JSON.stringify(m26.Constants.UNITS_OF_MEASURE))
console.log('m26.Constants.KILOMETERS_PER_MILE: ' + m26.Constants.KILOMETERS_PER_MILE)
console.log('m26.Constants.YARDS_PER_MILE:      ' + m26.Constants.YARDS_PER_MILE)
console.log('m26.Constants.MILES_PER_KILOMETER: ' + m26.Constants.MILES_PER_KILOMETER)
console.log('m26.Constants.YARDS_PER_KILOMETER: ' + m26.Constants.YARDS_PER_KILOMETER)
console.log('m26.Constants.SECONDS_PER_HOUR:    ' + m26.Constants.SECONDS_PER_HOUR)
console.log('```')
console.log('')

console.log('#### Distance')
console.log('The default unit-of-measure is miles; unit-of-measure conversion methods are available.')
console.log('```')
d1 = new m26.Distance(26.2)
console.log('d1 = new m26.Distance(26.2)')
console.log('d1.uom()           -> ' + d1.uom())
console.log('d1.as_miles()      -> ' + d1.as_miles())
console.log('d1.as_kilometers() -> ' + d1.as_kilometers())
console.log('d1.as_yards()      -> ' + d1.as_yards())
console.log('```')
console.log('')

console.log('Distances can be constructed from other units, and added and subtracted.')
d2 = new m26.Distance(4.8)
d3 = new m26.Distance(10.0, "k")
d4 = d1.subtract(d3)
d5 = d1.add(d2)
console.log('```')
console.log('d2 = new m26.Distance(4.8)')
console.log('d3 = new m26.Distance(10.0, "k")')
console.log('d4 = d1.subtract(d3)')
console.log('d5 = d1.add(d2)')
console.log('d4.as_miles()      -> ' + d4.as_miles())
console.log('d5.as_miles()      -> ' + d5.as_miles())
console.log('```')

console.log('#### ElapsedTime')
console.log('ElapsedTime objects can be constructed from a Number of seconds, or "hh:mm:ss", "hh:mm", or "ss" String values.')
console.log('```')
t1 = new m26.ElapsedTime(3665)
t2 = new m26.ElapsedTime("3:47:30")
console.log('t1 = new m26.ElapsedTime(3665)')
console.log('t1.as_hhmmss() -> ' + t1.as_hhmmss())
console.log('t1.seconds()   -> ' + t1.seconds())
console.log('t1.hours()     -> ' + t1.hours())
console.log('')
console.log('t2 = new m26.ElapsedTime("3:47:30")')
console.log('t2.as_hhmmss() -> ' + t2.as_hhmmss())
console.log('t2.seconds()   -> ' + t2.seconds())
console.log('t2.hours()     -> ' + t2.hours())
console.log('```')
console.log('')


console.log('#### Speed')
console.log('Calculate a Speed based on a given Distance and ElapsedTime.')
console.log('```')
d = new m26.Distance(26.2)
t = new m26.ElapsedTime('03:47:30')
s = new m26.Speed(d, t)
console.log('d = new m26.Distance(26.2)')
console.log('t = new m26.ElapsedTime("03:47:30")')
console.log('s = new m26.Speed(d, t)')
console.log('mph: ' + s.mph())
console.log('kph: ' + s.kph())
console.log('yph: ' + s.yph())
console.log('seconds_per_mile: ' + s.seconds_per_mile())
console.log('pace_per_mile:    ' + s.pace_per_mile())
console.log('```')
console.log('')
console.log('')

